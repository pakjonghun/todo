{"version":3,"sources":["App.js"],"names":["App","useState","isWorking","setIsWorking","todo","setTodo","toDos","setTodos","useEffect","a","async","AsyncStorage","multiGet","getAllItems","items","JSON","parse","console","log","getInit","isWorkingController","setItem","deleteLocalData","key","newTodos","stringify","editLocal","value","newObj","style","styles","container","buttonContainer","onPress","buttonText","onSubmitEditing","Date","now","done","onChangeText","textInput","placeholder","Object","keys","filter","item","map","todoContainer","todoText","todoBtns","Platform","OS","newValue","Alert","prompt","val","editTodo","name","todoIcon","todoBtnMargin","doneWork","confirm","alert","text","deleteTodo","theme","flex","backgroundColor","color","fontSize","fontWeight","flexDirection","justifyContent","alignItems","marginHorizontal","marginVertical","isDone","textDecorationLine","marginRight","marginBottom","padding","borderRadius"],"mappings":"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","file":"static/js/app.22665ced.chunk.js","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Alert,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  Platform,\n  Switch,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nexport default function App() {\n  const [isWorking, setIsWorking] = useState();\n  const [todo, setTodo] = useState();\n  const [toDos, setTodos] = useState({});\n\n  useEffect(() => {\n    const getInit = async () => {\n      try {\n        const getAllItems = await AsyncStorage.multiGet([\"isWorking\", \"toDos\"]);\n        const items = JSON.parse(getAllItems[1][1]);\n        setTodos(items || {});\n        setIsWorking(!+getAllItems[0][1] || false);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getInit();\n  }, []);\n\n  const isWorkingController = async () => {\n    try {\n      await AsyncStorage.setItem(\"isWorking\", isWorking ? \"1\" : \"0\");\n      setIsWorking(!isWorking);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onTodoChange = (todo) => {\n    setTodo(todo);\n  };\n\n  const addTodo = async () => {\n    try {\n      const newTodos = {\n        ...toDos,\n        [Date.now()]: { todo, isWorking, done: false },\n      };\n      setTodos(newTodos);\n      await AsyncStorage.setItem(\"toDos\", JSON.stringify(newTodos));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const deleteLocalData = async (key) => {\n    try {\n      const newTodos = { ...toDos };\n      delete newTodos[key];\n      await AsyncStorage.setItem(\"toDos\", JSON.stringify(newTodos));\n      setTodos(newTodos);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const deleteTodo = async (key) => {\n    try {\n      switch (Platform.OS) {\n        case \"web\":\n          const ok = confirm(\"Are you sure?\");\n          if (!ok) return;\n          deleteLocalData(key);\n          break;\n\n        default:\n          Alert.alert(\"Confirm\", \"Are you sure?\", [\n            {\n              text: \"YES\",\n              onPress: async () => {\n                deleteLocalData(key);\n              },\n            },\n            {\n              text: \"NO\",\n            },\n          ]);\n          break;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const editLocal = async (key, value) => {\n    try {\n      const newObj = JSON.parse(JSON.stringify(toDos));\n      newObj[key][\"todo\"] = value;\n      await AsyncStorage.setItem(\"toDos\", JSON.stringify(newObj));\n      setTodos(newObj);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const editTodo = async (key) => {\n    try {\n      let newValue;\n      switch (Platform.OS) {\n        case \"android\":\n          newValue = \"android not working\";\n          return editLocal(key, newValue);\n\n        case \"ios\":\n          newValue = Alert.prompt(\"Input\", \"Input new todo\", (val) =>\n            editLocal(key, val)\n          );\n          break;\n\n        case \"web\":\n          newValue = prompt(\"Input new todo!\");\n          return editLocal(key, newValue);\n\n        default:\n          break;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const doneWork = async (key) => {\n    try {\n      const newObj = JSON.parse(JSON.stringify(toDos));\n      newObj[key].done = !newObj[key].done;\n      await AsyncStorage.setItem(\"toDos\", JSON.stringify(newObj));\n      setTodos(newObj);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"light\" />\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity onPress={isWorkingController}>\n          <Text style={styles.buttonText(isWorking)}>Work</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={isWorkingController}>\n          <Text style={styles.buttonText(!isWorking)}>Travel</Text>\n        </TouchableOpacity>\n      </View>\n      <TextInput\n        onSubmitEditing={addTodo}\n        onChangeText={onTodoChange}\n        style={styles.textInput}\n        placeholder={\"Input todo.\"}\n      />\n      <ScrollView>\n        {Object.keys(toDos)\n          .filter((item) => toDos[item].isWorking === isWorking)\n          .map((key) => (\n            <View style={styles.todoContainer} key={key}>\n              <Text style={styles.todoText(toDos[key].done)}>\n                {toDos[key].todo}\n              </Text>\n              <View style={styles.todoBtns}>\n                {toDos[key].done || (\n                  <TouchableOpacity onPress={() => editTodo(key)}>\n                    <Feather\n                      name=\"edit-2\"\n                      style={{ ...styles.todoIcon, ...styles.todoBtnMargin }}\n                    />\n                  </TouchableOpacity>\n                )}\n                <TouchableOpacity onPress={() => doneWork(key)}>\n                  <MaterialIcons\n                    name=\"done\"\n                    style={{ ...styles.todoIcon, ...styles.todoBtnMargin }}\n                  />\n                </TouchableOpacity>\n\n                <TouchableOpacity onPress={() => deleteTodo(key)}>\n                  <AntDesign name=\"delete\" style={styles.todoIcon} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ))}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst theme = {\n  white: \"#f5f5f5\",\n  black: \"#050509\",\n  lightBrown: \"#cfc1b9\",\n  gray: \"#a4a1a2\",\n  darkGray: \"#5d5e61\",\n  darkBrown: \"#463838\",\n  yellowBrown: \"#d59f6f\",\n  greenBrown: \"#887261\",\n};\n\nconst styles = {\n  container: {\n    flex: 1,\n    backgroundColor: theme.black,\n  },\n  buttonText: (isWorking) => ({\n    color: isWorking ? theme.gray : theme.white,\n    fontSize: 40,\n    fontWeight: \"600\",\n  }),\n\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginHorizontal: 30,\n    marginVertical: 60,\n  },\n  todoContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginHorizontal: 30,\n    marginVertical: 20,\n  },\n  todoText: (isDone) => ({\n    textDecorationLine: isDone ? \"line-through\" : \"none\",\n    fontSize: 20,\n    fontWeight: \"600\",\n    color: isDone ? theme.gray : theme.lightBrown,\n  }),\n  todoIcon: {\n    fontSize: 20,\n    color: theme.lightBrown,\n  },\n  todoBtnMargin: {\n    marginRight: 20,\n  },\n  todoBtns: {\n    flexDirection: \"row\",\n  },\n  textInput: {\n    marginHorizontal: 20,\n    marginBottom: 15,\n    padding: 20,\n    fontSize: 20,\n    backgroundColor: theme.white,\n    borderRadius: 5,\n  },\n};\n"],"sourceRoot":""}